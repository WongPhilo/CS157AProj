CREATE DATABASE IF NOT EXISTS cs157aproject;
USE cs157aproject;

CREATE TABLE IF NOT EXISTS `MARKET` (
  `MARKET_ID` INT NOT NULL,
  `MARKET_NAME` TEXT NOT NULL,
  `ADDRESS` TEXT,
  `STREET` TEXT,
  `STATE_ABBR` TEXT,
  `STATE_NAME` TEXT,
  `CITY` TEXT,
  `ZIP_CODE` TEXT,
  PRIMARY KEY (`MARKET_ID`)
);

CREATE TABLE IF NOT EXISTS `CUSTOMER` (
  `CUSTOMER_ID` INT NOT NULL,
  `CUSTOMER_NAME` TEXT NOT NULL,
  `CUSTOMER_PHONE` TEXT NOT NULL,
  `CUSTOMER_SPENT` FLOAT(16) NOT NULL,
  `ADDRESS` TEXT,
  `STREET` TEXT,
  `STATE_ABBR` TEXT,
  `STATE_NAME` TEXT,
  `CITY` TEXT,
  `ZIP_CODE` TEXT,
  PRIMARY KEY (`CUSTOMER_ID`)
);

CREATE TABLE IF NOT EXISTS `VENDOR` (
  `VENDOR_ID` INT NOT NULL,
  `VENDOR_NAME` TEXT NOT NULL,
  `VENDOR_PHONE` TEXT NOT NULL,
  `VENDOR_MARKET_ID` INT NOT NULL,
  `ADDRESS` TEXT,
  `STREET` TEXT,
  `STATE_ABBR` TEXT,
  `STATE_NAME` TEXT,
  `CITY` TEXT,
  `ZIP_CODE` TEXT,
  PRIMARY KEY (`VENDOR_ID`),
  CONSTRAINT `VENDOR_FK_MARKET` FOREIGN KEY (`VENDOR_MARKET_ID`) REFERENCES `MARKET` (`MARKET_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS `SUPPLIER` (
  `SUPPLIER_ID` INT NOT NULL,
  `SUPPLIER_NAME` TEXT NOT NULL,
  `SUPPLIER_PHONE` TEXT NOT NULL,
  `SUPPLIER_VENDOR_ID` INT NOT NULL,
  `ADDRESS` TEXT,
  `STREET` TEXT,
  `STATE_ABBR` TEXT,
  `STATE_NAME` TEXT,
  `CITY` TEXT,
  `ZIP_CODE` TEXT,
  PRIMARY KEY (`SUPPLIER_ID`),
  CONSTRAINT `SUPPLIER_FK_VENDOR` FOREIGN KEY (`SUPPLIER_VENDOR_ID`) REFERENCES `VENDOR` (`VENDOR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS `TRANSPORTER` (
  `TRANSPORTER_ID` INT NOT NULL,
  `TRANSPORTER_NAME` TEXT NOT NULL,
  `TRANSPORTER_PHONE` TEXT NOT NULL,
  `ADDRESS` TEXT,
  `STREET` TEXT,
  `STATE_ABBR` TEXT,
  `STATE_NAME` TEXT,
  `CITY` TEXT,
  `ZIP_CODE` TEXT,
  PRIMARY KEY (`TRANSPORTER_ID`)
);

CREATE TABLE IF NOT EXISTS `STALL` (
  `STALL_ID` INT NOT NULL CHECK (`STALL_ID` <= 30),
  `STALL_NAME` TEXT NOT NULL,
  `STALL_FEE` FLOAT(8) NOT NULL CHECK (`STALL_FEE` > 0),
  `STALL_VENDOR_ID` INT,
  `STALL_PRODUCT_THROUGHPUT` INT,
  `STALL_MONEY_THROUGHPUT` FLOAT(16),
  `RECENT_INSPECTION_DATE` TEXT NOT NULL,
  `RECENT_INSPECTION_RESULT` TEXT NOT NULL CHECK (`RECENT_INSPECTION_RESULT` = "PASS"),
  PRIMARY KEY (`STALL_ID`),
  CONSTRAINT `STALL_FK_VENDOR` FOREIGN KEY (`STALL_VENDOR_ID`) REFERENCES `VENDOR` (`VENDOR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS `INSPECTION` (
  `INSPECTION_ID` INT NOT NULL,
  `INSPECTION_STALL_ID` INT NOT NULL,
  `INSPECTION_DATE` TEXT NOT NULL,
  `INSPECTION_RESULT` TEXT NOT NULL,
  PRIMARY KEY (`INSPECTION_ID`),
  CONSTRAINT `INSPECTION_FK_STALL` FOREIGN KEY (`INSPECTION_STALL_ID`) REFERENCES `STALL` (`STALL_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS `CATEGORY` (
  `CATEGORY_ID` INT NOT NULL,
  `CATEGORY_NAME` TEXT,
  `ALLERGY_PREVALENCE` FLOAT(8),
  `ALLERGY_DESCRIPTION` TEXT,
  `ALLERGY_LABEL` TEXT,
  PRIMARY KEY (`CATEGORY_ID`)
);

CREATE TABLE IF NOT EXISTS `PRODUCT` (
  `PRODUCT_ID` INT NOT NULL,
  `PRODUCT_NAME` TEXT,
  `PRODUCT_STALL_ID` INT,
  `PRODUCT_CATEGORY_ID` INT,
  `PRODUCT_ON_HAND` INT CHECK (PRODUCT_ON_HAND > 0),
  PRIMARY KEY (`PRODUCT_ID`),
  CONSTRAINT `PRODUCT_FK_CATEGORY` FOREIGN KEY (`PRODUCT_CATEGORY_ID`) REFERENCES `CATEGORY` (`CATEGORY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS `CUSTOMER_LINE_ITEM` (
  `ORDER_ID` INT NOT NULL,
  `ORDER_CUSTOMER_ID` INT NOT NULL,
  `ORDER_PRODUCT_ID` INT NOT NULL,
  `DATE` TEXT NOT NULL,
  `QUANTITY` INT NOT NULL CHECK (`QUANTITY` > 0),
  `UNIT_PRICE` FLOAT(8) NOT NULL CHECK (`UNIT_PRICE` > 0),
  `ORDER_TRANSPORTER_ID` INT NOT NULL,
  PRIMARY KEY (`ORDER_ID`),
  CONSTRAINT `CUSTOMER_LINE_ITEM_FK_CUSTOMER` FOREIGN KEY (`ORDER_CUSTOMER_ID`) REFERENCES `CUSTOMER` (`CUSTOMER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `CUSTOMER_LINE_ITEM_FK_PRODUCT` FOREIGN KEY (`ORDER_PRODUCT_ID`) REFERENCES `PRODUCT` (`PRODUCT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `CUSTOMER_LINE_ITEM_FK_TRANSPORTER` FOREIGN KEY (`ORDER_TRANSPORTER_ID`) REFERENCES `TRANSPORTER` (`TRANSPORTER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);